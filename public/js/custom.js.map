{"version":3,"sources":["closed_area_select_on_user_form.js","delete_record.js","duty_swap.js","generate_username.js","header_search.js","lib_initializers.js","new_training_assignment_filter.js","training_completed_today.js","update_users_select.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC1DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChfile":"custom.js","sourcesContent":["/**\r\n * Created by sdibble on 9/16/2016.\r\n * resources/views/user/_new_user.blade.php\r\n * When a user updates the group selection,\r\n * show/hide closed area select fields.\r\n */\r\n\r\n$(document).ready(function() {\r\n    $(\"#_new_user_groups_field\").change(function(){\r\n        var selectVal = $(this).val();\r\n        $(\".closed-area\").hide();\r\n        $.each(selectVal, function( index, value) {\r\n            $(\"#access-\" + value).show();\r\n        });\r\n    });\r\n});","/**\r\n * Created by sdibble on 10/14/2015.\r\n */\r\n\r\nfunction delete_record($this, page)\r\n{\r\n    var token = $(\"meta[name=csrf-token]\").attr(\"content\");\r\n\r\n    var url, selector, type;\r\n\r\n    if (page === \"profile\" || page === \"training-user\")\r\n    {\r\n        url = $($this).data(\"url\");\r\n        type = $($this).data(\"type\");\r\n        selector = (page === \"profile\") ? $($this).closest(\"li\") : $($this).closest(\"tr\");\r\n    }else {\r\n        var recordId = $($this).data(\"id\");\r\n        type = page;\r\n        selector = page === \"attachment\" ? $($this).parent(\".chip\") : $(\".\"+ page + \"-\" + recordId);\r\n        url = \"/\" + page + \"/\" + recordId;\r\n    }\r\n\r\n    selector.addClass(\"red accent-1\");\r\n\r\n    if (confirm(\"Are you sure you wish to delete this \"+ type +\"?\")){\r\n        $.ajax({\r\n            url: root + url,\r\n            type: \"post\",\r\n            data: {_method: \"delete\", _token : token},\r\n            success: function(result) {\r\n                selector.remove();\r\n                Materialize.toast(\"The selected \" + type + \" was deleted successfully.\", 4000);\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        selector.removeClass(\"red accent-1\");\r\n    }\r\n}\r\n\r\n$(document).ready(function(){\r\n    $(\".delete-record\").click(function(){\r\n        delete_record(this, \"profile\");\r\n    });\r\n    $(\".delete-group\").click(function(){\r\n        delete_record(this, \"group\");\r\n    });\r\n    $(\".delete-user\").click(function(){\r\n        delete_record(this, \"user\");\r\n    });\r\n    $(\".delete-training\").click(function(){\r\n        delete_record(this, \"training\");\r\n    });\r\n    $(\".delete-training-user\").click(function(){\r\n        delete_record(this, \"training-user\");\r\n    });\r\n    $(\".delete-duty\").click(function(){\r\n        delete_record(this, \"duty\");\r\n    });\r\n    $(\".delete-news\").click(function(){\r\n        delete_record(this, \"news\");\r\n    });\r\n    $(\".delete-attachment\").click(function(){\r\n        delete_record(this, \"attachment\");\r\n    });\r\n\r\n});","/**\r\n * Handle the /eod/building and /eod/lab pages\r\n * When an admin clicks on 2 swap buttons, submit a form to the controller to update/reload the page.\r\n */\r\n\r\n$(function(){\r\n    var id = [];\r\n    var date = [];\r\n    var duty = \"\";\r\n    var type = \"\";\r\n    $(\".duty-swap\").click(function(){\r\n\r\n        //highlight the button clicked so the user knows.\r\n        $(this).removeClass(\"btn-default\").addClass(\"btn-success\");\r\n        var index = id.length;\r\n        //push the id and date for use later.\r\n        id[index] =  $(this).data(\"id\") ;\r\n        date[index] = $(this).data(\"date\") ;\r\n        duty = $(this).data(\"duty\");\r\n        type = $(this).data(\"type\");\r\n\r\n        //If user hit the same button twice, let\"s drop the second data\r\n        if(index === 1 && id[0] === id[1]){\r\n            id.pop();\r\n            date.pop();\r\n        }\r\n\r\n        //Once we have 2 records to swap, let\"s create/process the form.\r\n        if(index === 1) {\r\n            var newForm = $(\"<form>\",{\r\n                \"method\":\"POST\",\r\n                \"action\": root+\"/duty-swap\",\r\n                \"target\": \"_top\"\r\n            }).append($(\"<input>\", {\r\n                \"name\": \"_token\",\r\n                \"type\": \"hidden\",\r\n                \"value\": $(\"meta[name=csrf-token]\").attr(\"content\")\r\n            })).append($(\"<input>\", {\r\n                \"name\": \"id\",\r\n                \"type\": \"hidden\",\r\n                \"value\": id\r\n            })).append($(\"<input>\", {\r\n                \"name\": \"date\",\r\n                \"type\": \"hidden\",\r\n                \"value\": date\r\n            })).append($(\"<input>\", {\r\n                \"name\": \"duty\",\r\n                \"type\": \"hidden\",\r\n                \"value\": duty\r\n            })).append($(\"<input>\", {\r\n                \"name\": \"type\",\r\n                \"type\": \"hidden\",\r\n                \"value\": type\r\n            }));\r\n            //append the form to the body and submit it.\r\n            newForm.appendTo(\"body\").submit();\r\n        }\r\n    })\r\n});","/**\r\n * Created by sdibble on 11/20/2015.\r\n *\r\n * Used on the form to create a new user.\r\n * When a key is pressed in the email field, we copy that into the userfield.\r\n * View: user._new_user\r\n *\r\n */\r\n\r\n$(function(){\r\n    $(\"#email\").keypress(function(){\r\n        var email = $(\"#email\").val();\r\n        var username = email.split(\"@\");\r\n        $(\"#username\").val(username[0]);\r\n    });\r\n})","/*\r\n    Code from http://www.runningcoder.org/jquerytypeahead/demo/\r\n    Requirements: jquery.typeahead.min.js\r\n */\r\n\r\n$(document).ready(function($) {\r\n    // Set the Options for \"Bloodhound\" suggestion engine\r\n    var engine = new Bloodhound({\r\n        prefetch: {\r\n            url: root + \"/search\",\r\n            filter: function (data) {\r\n                console.log(data);\r\n                return $.map(data.data.user, function (user) {\r\n                    return {\r\n                        name: user.last_name + \", \" + user.first_name,\r\n                        id: user.id,\r\n                        employeeNumber: user.emp_num\r\n                    };\r\n                });\r\n            }\r\n        },\r\n        datumTokenizer: function (datum) {\r\n            var nameToken = Bloodhound.tokenizers.whitespace(datum.name);\r\n            var employeeNumToken = Bloodhound.tokenizers.whitespace(datum.employeeNumber);\r\n            return nameToken.concat(employeeNumToken);\r\n        },\r\n        queryTokenizer: Bloodhound.tokenizers.whitespace\r\n    });\r\n\r\n    // initialize the bloodhound suggestion engine\r\n    engine.initialize();\r\n\r\n    $(\".search-input\").typeahead({\r\n        minLength: 2,\r\n        highlight: true\r\n    },{\r\n        source: engine.ttAdapter(),\r\n        display: \"name\",\r\n        name: \"usersList\",\r\n\r\n        // the key from the array we want to display (name,id,email,etc...)\r\n        templates: {\r\n            empty: [\r\n                \"<div class='list-group search-results-dropdown'><div class='list-group-item' style='color:black'>Nothing found.</div></div>\"\r\n            ],\r\n            suggestion: function (data) {\r\n\r\n               return \"<div><a href=\" + root + \"/user/\" + data.id + \" class='list-group-item'>\" + data.name + \" <small>(\" + data.employeeNumber + \")</small></a></div>\";\r\n\r\n            }\r\n        }\r\n    });\r\n});","/**\r\n * Created by sdibble on 10/15/2015.\r\n *\r\n * Initialize basic jQuery Libraries.\r\n */\r\n\r\n$( document ).ready(function() {\r\n\r\n    //Material Design Initializers\r\n    $(\".button-collapse\").sideNav();\r\n    $(\".tooltipped\").tooltip();\r\n    $(\".modal-trigger\").leanModal();\r\n    $(\".dropdown-button\").dropdown({\r\n        hover: true,\r\n        belowOrigin: true,\r\n    });\r\n    $(\".datepicker\").pickadate({\r\n        onSet: function( arg ){\r\n            if ( \"select\" in arg ){ //prevent closing on selecting month/year\r\n                this.close();\r\n            }\r\n        },\r\n        format: \"yyyy-mm-dd\",\r\n        container: \"body\",\r\n        selectYears: true,\r\n        selectMonths: true\r\n    });\r\n\r\n    //data table\r\n    $(\".data-table\").DataTable( {\r\n        paging: false\r\n    });\r\n\r\n    //Hide the alerts after a few seconds.\r\n    $(\"div.alert\").not(\".note\").delay(8000).slideUp(500);\r\n\r\n    //If we have an ajax call, send our CSRF token.\r\n    $.ajaxSetup({\r\n        headers: { \"X-CSRF-TOKEN\": $(\"meta[name='csrf-token']\").attr(\"content\") }\r\n    });\r\n\r\n    //upload training/user documents\r\n    $(\"#js-upload\").change(function() {\r\n        $(\"#attachments-form\").submit();\r\n    });\r\n\r\n    $(\"select\").material_select();\r\n});\r\n","/**\r\n * Created by sdibble on 2/10/2016.\r\n */\r\n\r\nfunction trainingAssignmentFilters(name) {\r\n    $(\"#assignment_buttons .btn\").removeClass(\"active\");\r\n\r\n    var trainingDueDate = $(\"#new-training #training_due_date\");\r\n    var userField = $(\"#new-training #user_field\");\r\n    var groupField = $(\"#new-training #group_field\");\r\n\r\n    if (name === \"due_date\") {\r\n        trainingDueDate.show();\r\n        userField.show();\r\n        groupField.show();\r\n    } else {\r\n        trainingDueDate.hide();\r\n        userField.hide();\r\n        groupField.hide();\r\n    }\r\n}\r\n\r\n$(function(){\r\n    trainingAssignmentFilters(\"none\");\r\n\r\n    $(\"#ab-due-date\").click(function(){\r\n        trainingAssignmentFilters(\"due_date\");\r\n    });\r\n    $(\"#ab-none\").click(function(){\r\n        trainingAssignmentFilters(\"none\");\r\n    });\r\n});","/**\r\n * Generates a string for today\"s date in the format of yyyy-mm-dd\r\n *\r\n * @returns {string}\r\n */\r\nfunction formatToday() {\r\n    var d = new Date(),\r\n        month = \"\" + (d.getMonth() + 1),\r\n        day = \"\" + d.getDate(),\r\n        year = d.getFullYear();\r\n\r\n    if (month.length < 2) month = \"0\" + month;\r\n    if (day.length < 2) day = \"0\" + day;\r\n\r\n    return [year, month, day].join(\"-\");\r\n}\r\n\r\n$(function(){\r\n    $(\".completed-today\").click(function(){\r\n        var today = formatToday();\r\n        var training_user_id = $(this).data(\"id\");\r\n        var user_id = $(this).data(\"user\");\r\n        var token = $(\"meta[name=csrf-token]\").attr(\"content\");\r\n\r\n        //Set value on page.\r\n        $(this).closest(\"tr\").children(\".training_completed_date\").text(today);\r\n\r\n        //hide completed today button & reminder button.\r\n        $(this).hide();\r\n        $(this).closest(\"td\").children(\"a\").hide();\r\n\r\n        //Make an ajax call to update the record.\r\n        $.ajax({\r\n            url: root + \"/user/\" + user_id + \"/training/\" + training_user_id,\r\n            type: \"post\",\r\n            data: {\r\n                _method: \"put\",\r\n                _token : token,\r\n                completed_date : today\r\n            },\r\n            success: function(result) {\r\n            }\r\n        });\r\n\r\n    });\r\n});","/**\r\n * Created by sdibble on 1/22/2016.\r\n *\r\n * When a group is selected, query the server for a list of users in that group.\r\n * Update the user select box with checked users.\r\n */\r\n\r\n$(function(){\r\n    //when we pick a group, begin.\r\n    $(\"#group_field select\").on(\"change\", function (e){\r\n\r\n        //get our values\r\n        var token = $(\"meta[name=csrf-token]\").attr(\"content\");\r\n        var selected = $(this).val();\r\n\r\n        //process a post request\r\n        $.ajax({\r\n            url: root + \"/group-user-id\",\r\n            type: \"post\",\r\n            data: {\r\n                _method: \"post\",\r\n                _token : token,\r\n                groups : selected\r\n            },\r\n            success: function(result) {\r\n                // if we get a string, then deselect users.\r\n                // if we get an array, select those users.\r\n                // otherwise do nothing.\r\n                if (typeof result == \"string\") {\r\n                    $(\"select.User-select\").val(\"\");\r\n                } else if (typeof result == \"object\") {\r\n                    $(\"select.User-select\").val(result);\r\n                }\r\n                $(\"select\").material_select();\r\n            }\r\n        });\r\n    });\r\n});"]}